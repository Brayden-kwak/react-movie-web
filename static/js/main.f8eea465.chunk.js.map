{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","mediumCoverImage","title","year","summary","genres","src","alt","to","map","g","Home","useState","loading","setLoading","movies","setMovies","getMovies","a","fetch","json","data","useEffect","movie","medium_cover_image","Detail","useParams","console","log","getMovie","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA4BeA,MAzBf,YAAqE,IAArDC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,iBAAkBC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,OACxD,OACI,qCACE,qBAAKC,IAAKL,EAAkBM,IAAKL,IACjC,6BAAI,cAAC,IAAD,CAAMM,GAAE,gBAAWR,GAAnB,SAA0BE,MAC9B,4BAAIC,IACJ,4BAAIC,IACJ,6BACGC,EAAOI,KAAI,SAAAC,GAAC,OACb,6BAAaA,GAAJA,YC8BNC,MAvCf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACF,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sEAERC,MAAM,0EAFE,8BAKdC,OALc,OACVA,EADU,OAMhBJ,EAAUI,EAAKC,KAAKN,QACpBD,GAAW,GAPK,2CAAH,qDAYf,OAHAQ,qBAAU,WACRL,MACC,IAED,8BACGJ,EACC,4CAEA,8BACGE,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEvB,GAAIuB,EAAMvB,GACVC,iBAAkBsB,EAAMC,mBACxBtB,MAAOqB,EAAMrB,MACbC,KAAMoB,EAAMpB,KACZC,QAASmB,EAAMnB,QACfC,OAAQkB,EAAMlB,QANTkB,EAAMvB,YCVVyB,MAff,WACI,IAAOzB,EAAM0B,cAAN1B,GACP2B,QAAQC,IAAI5B,GACZ,IAAM6B,EAAQ,uCAAG,4BAAAX,EAAA,sEAEHC,MAAM,qDAAD,OAAsDnB,IAFxD,8BAGXoB,OAHW,OACPA,EADO,OAIbO,QAAQC,IAAIR,GAJC,2CAAH,qDASd,OAHAE,qBAAU,WACNO,MACF,IACK,yCCKIC,MAbf,WACE,OACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,UCDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f8eea465.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nfunction Movie({id, mediumCoverImage, title, year, summary, genres}){\n    return (\n        <>\n          <img src={mediumCoverImage} alt={title}/>\n          <h2><Link to={`movie/${id}`}>{title}</Link></h2>\n          <p>{year}</p>\n          <p>{summary}</p>\n          <ul>\n            {genres.map(g => (\n            <li key={g}>{g}</li>\n            ))}\n          </ul>          \n        </>\n    );\n}\n\nMovie.propTypes ={\n    id:PropTypes.number.isRequired,\n    mediumCoverImage: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    summary: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import {useState, useEffect} from 'react';\nimport Movie from '../components/Movie';\n\nfunction Home(){\n    const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState(false);\n\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  return (\n    <div>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div> \n          {movies.map((movie) => (\n            <Movie \n              key={movie.id}\n              id={movie.id}\n              mediumCoverImage={movie.medium_cover_image}\n              title={movie.title}\n              year={movie.year}\n              summary={movie.summary}\n              genres={movie.genres}\n              />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;","import {useParams} from \"react-router-dom\";\nimport {useEffect} from \"react\";\nfunction Detail(){\n    const {id} = useParams();\n    console.log(id);\n    const getMovie = async() => {\n        const json = await (\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n        ).json();\n        console.log(json);\n    }\n    useEffect(() => {\n        getMovie();\n    },[]);\n    return <h1>Detail</h1>\n}\n\nexport default Detail;","import \"./App.css\";\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\n//import PracCoin from './PracCoin.js';\n\nfunction App() {\n  return ( \n      <Switch>\n        <Route path=\"/movie/:id\">\n          <Detail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}